services:
  shelter:
    image: postgres
    volumes:
      - ./shelter/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${SHELTER_POSTGRES_PASSWORD}
      POSTGRES_USER: ${SHELTER_POSTGRES_USER}
      POSTGRES_DB: ${SHELTER_POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${SHELTER_POSTGRES_USER} -d ${SHELTER_POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "3311:5432"

  pet:
    image: mysql:8.2.0
    volumes:
      - ./pet/init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${PET_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PET_MYSQL_DATABASE}
      MYSQL_USER: ${PET_MYSQL_USER}
      MYSQL_PASSWORD: ${PET_MYSQL_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "pet" ]
      timeout: 10s
      retries: 10
    ports:
      - "3312:3306"

  metrics:
    image: mysql:8.2.0
    volumes:
      - ./metrics/init:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${METRICS_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${METRICS_MYSQL_DATABASE}
      MYSQL_USER: ${METRICS_MYSQL_USER}
      MYSQL_PASSWORD: ${METRICS_MYSQL_PASSWORD}
    depends_on:
      shelter:
        condition: "service_healthy"
      pet:
        condition: "service_healthy"
    ports:
      - "3313:3306"
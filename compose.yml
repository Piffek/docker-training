services:
  pet:
    build:
      context: pet
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${PET_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PET_MYSQL_DATABASE}
      MYSQL_USER: ${PET_MYSQL_USER}
      MYSQL_PASSWORD: ${PET_MYSQL_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "pet" ]
      retries: 5
    ports:
      - "3309:3306"

  shelter:
    build:
      context: shelter
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: ${SHELTER_POSTGRES_PASSWORD}
      POSTGRES_USER: ${SHELTER_POSTGRES_USER}
      POSTGRES_DB: ${SHELTER_POSTGRES_DB}
    depends_on:
      pet:
        condition: "service_healthy"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${SHELTER_POSTGRES_USER} -d ${SHELTER_POSTGRES_DB}'" ]
      interval: 3s
      timeout: 3s
      retries: 3
    ports:
      - "3308:5432"

  shelter-app:
    container_name: shelter-app
    image: piffek1/shelter-service:latest
    pull_policy: always
    depends_on:
      shelter:
        condition: "service_healthy"

  metrics:
    build:
      context: metrics
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${METRICS_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${METRICS_MYSQL_DATABASE}
      MYSQL_USER: ${METRICS_MYSQL_USER}
      MYSQL_PASSWORD: ${METRICS_MYSQL_PASSWORD}
    depends_on:
      shelter:
        condition: "service_healthy"
      pet:
        condition: "service_healthy"
    ports:
      - "3310:3306"
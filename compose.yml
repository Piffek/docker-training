version: '3.7'

services:
  pet-db:
    container_name: pet-db
    build:
      context: pet-db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${PET_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PET_MYSQL_DATABASE}
      MYSQL_USER: ${PET_MYSQL_USER}
      MYSQL_PASSWORD: ${PET_MYSQL_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "pet-db" ]
      retries: 1
    ports:
      - ${PET_MYSQL_PORT}:3306
    networks:
      - docker_network
    restart: always

  pet-app:
    container_name: pet-app
    build:
      context: pet-app
      dockerfile: Dockerfile
    depends_on:
      pet-db:
        condition: service_healthy
    ports:
      - ${PET_APP_PORT}:${PET_APP_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 60s
    entrypoint: ./entrypoint.sh
    networks:
      - docker_network
    restart: on-failure

  shelter-db:
    container_name: shelter-db
    build:
      context: shelter-db
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: ${SHELTER_POSTGRES_PASSWORD}
      POSTGRES_USER: ${SHELTER_POSTGRES_USER}
      POSTGRES_DB: ${SHELTER_POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${SHELTER_POSTGRES_USER} -d ${SHELTER_POSTGRES_DB}'" ]
      interval: 10s
      timeout: 50s
      retries: 5
    ports:
      - ${SHELTER_POSTGRES_PORT}:5432
    networks:
      - docker_network
    restart: always

  shelter-app:
    container_name: shelter-app
    build:
      context: shelter-app
      dockerfile: Dockerfile
    depends_on:
      shelter-db:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    entrypoint: ./entrypoint.sh
    networks:
      - docker_network
    restart: on-failure

  metrics-db:
    container_name: metrics-db
    build:
      context: metrics-db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${METRICS_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${METRICS_MYSQL_DATABASE}
      MYSQL_USER: ${METRICS_MYSQL_USER}
      MYSQL_PASSWORD: ${METRICS_MYSQL_PASSWORD}
    depends_on:
      shelter-db:
        condition: service_healthy
      pet-db:
        condition: service_healthy
    ports:
      - ${METRICS_MYSQL_PORT}:3306
    restart: always

  rabbitmq:
    build: rabbit/.
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 50s
      retries: 10
    networks:
      - docker_network
    restart: always

  discovery-service:
    container_name: discovery-service
    image: piffek1/discovery-service
    ports:
      - ${DISCOVERY_SERVICE_PORT}:${DISCOVERY_SERVICE_PORT}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - docker_network
    restart: on-failure

networks:
  docker_network:
    driver: bridge